pipeline {
  agent any
  environment {
    DOCKER_IMAGE = "yourdockerhub/bookreview-backend:${env.GIT_COMMIT}"
    DOCKER_IMAGE_PROD = "yourdockerhub/bookreview-backend:prod"
    SONAR_TOKEN = credentials('sonar-token')
    DOCKERHUB_CRED = credentials('dockerhub')
    SONAR_HOST_URL = "http://host.docker.internal:9000"
  }
  stages {
    stage('Checkout') {
      steps { checkout scm }
    }
    stage('Build') {
      steps { sh 'docker build -t ${DOCKER_IMAGE} backend' }
    }
    stage('Test') {
      steps {
        dir('backend') {
          sh '''
            python -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
            pytest -q
          '''
        }
      }
    }
    stage('CodeQuality') {
      steps {
        dir('backend') {
          sh '''
            docker run --rm                 -e SONAR_HOST_URL="${SONAR_HOST_URL}"                 -e SONAR_LOGIN="${SONAR_TOKEN}"                 -v "$PWD:/usr/src"                 sonarsource/sonar-scanner-cli
          '''
        }
      }
    }
    stage('Security') {
      steps {
        dir('backend') {
          sh '''
            pip install bandit
            bandit -c .bandit -r app || true
          '''
        }
        sh '''
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image ${DOCKER_IMAGE} || true
        '''
      }
    }
    stage('PushImage') {
      steps {
        sh '''
          echo $DOCKERHUB_CRED_PSW | docker login -u $DOCKERHUB_CRED_USR --password-stdin
          docker push ${DOCKER_IMAGE}
        '''
      }
    }
    stage('Deploy:Staging') {
      steps {
        sh 'docker compose up -d --build'
        sh 'curl -sf http://localhost:8000/health'
      }
    }
    stage('Release') {
      steps {
        sh '''
          docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_PROD}
          echo $DOCKERHUB_CRED_PSW | docker login -u $DOCKERHUB_CRED_USR --password-stdin
          docker push ${DOCKER_IMAGE_PROD}
        '''
      }
    }
    stage('Monitoring') {
      steps {
        sh '''
          docker compose -f monitoring/docker-compose.monitor.yml up -d
          curl -sf http://localhost:8000/metrics | head -n 5
        '''
      }
    }
  }
}
